@using MovieProject.Models.Database

@model Collection

@{
    var currId = Model?.Id;
    var currName = Model?.Name;
    var currDescription = Model?.Description;
    var displayMessage = TempData["displayMsg"];
    var errorMessage = TempData["errorMsg"];
}

<div class="row" id="manageSection">
    @if (displayMessage != null)
    {
        <div class="text-center mx-auto">
            <h5 id="disMsg" class="text-primary">@displayMessage</h5>
        </div>
    }
    @if (displayMessage != null)
    {
        <div class="text-center mx-auto">
            <h5 id="disMsg" class="text-danger">@errorMessage</h5>
        </div>
    }
    <h5 class="text-gray-600 fw-bold mb-3 text-center">Import a Movie</h5>
    <div class="col-sm-5 col-10 mx-auto pb-5">
        <form id="importForm" asp-controller="Movies" asp-action="Import">
            <div class="input-group ">
                <input class="search-input" type="text" id="movieSearch" autocomplete="off" placeholder="Enter Movie Title..." />
                <button type="submit" class="btn btn-gradient-primary-to-secondary btn-md fw-bolder" id="importBtn">Import</button>
            </div>
        </form>
    </div>
    <div class="col-md-10 text-center mx-auto bg-blue-soft">
        <h3 class="d-inline-block text-gray-600 my-3 w-75">Manage Collections</h3>
        <form asp-controller="MovieCollections" asp-action="Index" asp-route-id="@currId" id="collectionForm">
            <div class="row">
                <div class="col-10">
                    <select asp-for="Id" asp-items="@ViewBag.CollectionId" class="form-control bg-light" id="collectionList"></select>
                </div>
                <div class="col-2">
                    <button type="button" class="btn btn-gradient-primary-to-secondary w-100" data-bs-toggle="modal" onclick="clearText()" data-bs-target="#addCollectionModal">New</button>
                </div>

                <div class="col-12">
                    <hr class="text-dark" />
                </div>
            </div>
            <div class="row gx-4">
                <div class="col-5">
                    <h6 class="text-gray-600 fw-bold">In Collection</h6>
                    <select name="idsInCollection" class="form-select w-100 bg-light collection-control" size="8" id="inCollection" multiple>
                        @foreach (var movie in ViewBag.IdsInCollection)
                        {
                            <option class="fw-bold" value="@movie.Value">@movie.Text</option>
                        }
                    </select>
                </div>
                <div class="col-2 d-flex align-items-center justify-content-center p-0">
                    <div class="flex-colu1mn">
                        <div class="row">
                            <div class="col">
                                <button type="button" class="border-0 bg-blue-soft p-0" id="add">
                                    <img src="~/img/prev.png" class="coll-mng-img" aria-hidden=" true" />
                                </button>
                            </div>
                            <div class="col">
                                <button type="button" class="border-0 bg-blue-soft p-0" id="remove">
                                    <img src="~/img/next.png" class="coll-mng-img" aria-hidden=" true" />
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-5">
                    <h6 class="text-gray-600 fw-bold">Not In Collection</h6>
                    <select class="form-select w-100 bg-light collection-control" size="8" id="notInCollection" multiple>
                        @foreach (var movie in ViewBag.IdsNotInCollection)
                        {
                            <option class="fw-bold" value="@movie.Value">@movie.Text</option>
                        }
                    </select>
                </div>
                <div class="col-12 mb-3">
                    <hr class="text-dark" />
                    <h6 class="text-gray-600 fw-bold mb-3">Current Collection Options</h6>
                    <div class="row mx-5 mx-md-10 ">
                        <div class="col-12 col-md-4 mb-3 mb-md-0">
                            <button type="submit" class="btn btn-gradient-primary-to-secondary w-100" sty1le="min-width:4rem;">Save</button>
                        </div>
                        <div class="col-12 col-md-4 mb-3 mb-md-0">
                            <button type="button" class="btn btn-gradient-primary-to-secondary w-100 " st1yle="min-width:4rem;" data-bs-toggle="modal" data-bs-target="#editCollectionModal">Edit</button>
                        </div>
                        <div class="col-12 col-md-4 mb-3 mb-md-0">
                            <button type="button" class="btn btn-gradient-primary-to-secondary w-100" sty1le="min-width:4rem;" data-bs-toggle="modal" data-bs-target="#deleteCollectionModal">Delete</button>
                        </div>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>

@* Create Modal *@
<div class="modal fade" id="addCollectionModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content bg-blue-soft">
            <div class="modal-header bg-light">
                <h5 class="modal-title">Create Movie Collection</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form asp-action="Create" asp-controller="Collections">
                <div class="modal-body">
                    <div class="form-group mb-3">
                        <label asp-for="Name" class="control-label">Name:</label>
                        <input asp-for="Name" value="" class="form-control bg-light" autocomplete="off" />
                    </div>
                    <div class="form-group mb-3">
                        <label asp-for="Description" class="control-label">Description:</label>
                        <textarea asp-for="Description" id="addDescription" value="" class="form-control bg-light" rows="3"></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <div class="row">
                        <div class="col">
                            <form asp-action="Delete" asp-controller="Collections" asp-route-id="@currId">
                                <div class="form-group mb-3">
                                    <button type="submit" class="btn btn-gradient-primary-to-secondary fw-bold text-light">Create</button>
                                </div>
                            </form>
                        </div>
                        <div class="col">
                            <button type="button" class="btn btn-gradient-primary-to-secondary fw-bold text-light" data-bs-dismiss="modal">Close</button>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

@* Delete Modal *@
<div class="modal fade" id="deleteCollectionModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content bg-blue-soft">
            <div class="modal-header">
                <h5 class="modal-title">Delete Movie Collection</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body bg-light">
                <div class="form-group mb-3">
                    <p>WARNING! You are about to delete the "@currName" collection.</p>
                    <p>This is permanent.</p>
                </div>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col">
                        <form asp-action="Delete" asp-controller="Collections" asp-route-id="@currId">
                            <div class="form-group mb-3">
                                <button asp-for="Id" type="submit" class="btn btn-gradient-primary-to-secondary fw-bold text-light">Delete</button>
                            </div>
                        </form>
                    </div>
                    <div class="col">
                        <button type="button" class="btn btn-gradient-primary-to-secondary fw-bold text-light" data-bs-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@* Edit Modal *@
<div class="modal fade" id="editCollectionModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content bg-blue-soft">
            <div class="modal-header bg-light">
                <h5 class="modal-title">Edit Movie Collection</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form asp-action="Edit" asp-controller="Collections" asp-route-id="@currId">
                <div class="modal-body ">
                    <div class="form-group mb-3">
                        <label asp-for="Name" class="control-label">Name:</label>
                        <input asp-for="Name" class="form-control bg-light" autocomplete="off" />
                    </div>
                    <div class="form-group mb-3">
                        <label asp-for="Description" class="control-label">Description:</label>
                        <textarea asp-for="Description" class="form-control bg-light" rows="3"></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <div class="row">
                        <div class="col">
                            <button type="submit" class="btn btn-gradient-primary-to-secondary fw-bold text-light">Save</button>
                        </div>
                        <div class="col">
                            <button type="button" class="btn btn-gradient-primary-to-secondary fw-bold text-light" data-bs-dismiss="modal">Close</button>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>

        setTimeout(() => {
            var disMsg = document.getElementById('disMsg');

            //clear display message after 3 seconds.
            disMsg.innerHTML = "";
        }, 3000);

        function clearText() {
            document.getElementById("addDescription").innerHTML = "";
        }

        // OPTION class to deal with events
        class cOption {
            constructor(el) {
                (el == null) ? this.el = document.createElement('option') : this.el = el;
                this.clickHandler = this.toggleSelected.bind(this, this.el);
                this.addEvents();
            }

            addEvents() {
                this.el.addEventListener('click', this.clickHandler);
            }

            removeEvents() {
                this.el.removeEventListener('click', this.clickHandler);
            }

            toggleSelected(obj) {
                if (obj.getAttribute("selected")) {
                    obj.removeAttribute("selected");
                    obj.setAttribute("class", "fw-bold");
                    return;
                }
                obj.setAttribute("selected", true);
                obj.setAttribute("class", "fw-bold fst-italic text-primary");
            }
        }

        // Redirect after collection is changed
        const collectionList = document.getElementById("collectionList");
        collectionList.addEventListener("change", () => {
            let url = window.location.href.split("/Index");
            window.location.href = url[0] + "/Index?Id=" + collectionList.value;
        });

        const remove = document.getElementById("remove");
        const add = document.getElementById("add");
        const del = document.getElementById("del");
        const inColl = document.getElementById("inCollection");
        const notInColl = document.getElementById("notInCollection");

        // add event handlers to options
        addListener(inColl);
        addListener(notInColl);

        // pass "add" to add to collection OR "remove" to remove it from collection
        add.addEventListener("click", () => {
            swap("add");
        });

        remove.addEventListener("click", () => {
            swap("remove");
        });

        function swap(action) {
            let collection, selected;

            (action == "add") ? collection = notInColl : collection = inColl;

            selected = Array.from(collection);
            selected = selected.filter(option => option.hasAttribute("selected"));

            makeOptions(collection, selected);
            // recast IDs after change
            castId(document.getElementById("inCollection"));
            castId(document.getElementById("notInCollection"));
        }

        function makeOptions(list, arr) {
            let newOption, toRemove = [],
                addOption = [document.getElementById("inCollection"), document.getElementById("notInCollection")],
                removeOption = [document.getElementById("notInCollection"), document.getElementById("inCollection")];

            // addOption means we are adding options to collection | removeOption means we are removing from collection
            (list.getAttribute("id") == "notInCollection") ? list = addOption : list = removeOption;

            // count options in opposite list
            let count = list[0].length;

            for (let i = 0; i < arr.length; i++) {
                // instantiate an object from cOption class
                newOption = new cOption;
                newOption.el.id = list[0].id + (i + count);
                newOption.el.setAttribute("class", "fw-bold");
                newOption.el.textContent = arr[i].textContent;
                newOption.el.value = arr[i].value;
                // log id of option
                toRemove.push(arr[i].id);
                // append new option
                list[0].appendChild(newOption.el);
            }

            for (let i = 0; i < toRemove.length; i++) {
                // remove from opposite list
                document.getElementById(toRemove[i]).remove();
            }
        }

        function addListener(list) {
            let newOption;
            if (list.options.length == 0) return;

            for (let i = 0; i < list.options.length; i++) {
                newOption = new cOption(list.options[i]);
                newOption.el.id = list.id + i;
            }
        }

        function castId(list) {
            if (list == null) return;

            for (let i = 0; i < list.length; i++) {
                list.options[i].id = list.id + i;
            }
        }

        document.getElementById("collectionForm").addEventListener("submit", () => {
            var c = document.querySelector("#inCollection");
            for (var i = 0; i < c.options.length; i++) {
                c.options[i].selected = true;
            }
        });
    </script>
}